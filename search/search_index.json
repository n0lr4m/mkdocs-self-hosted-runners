{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Adding self-hosted runners You can add a self-hosted runner to a repository, an organization, or an enterprise. Adding a self-hosted runner to a repository You can add self-hosted runners to a single repository. To add a self-hosted runner to a user repository, you must be the repository owner. For an organization repository, you must be an organization owner or have admin access to the repository. On GitHub Enterprise Server, navigate to the main page of the repository. Under your repository name, click Settings. In the left sidebar, click Actions. Under \"Self-hosted runners,\" click Add runner . Select the operating system and architecture of your self-hosted runner machine. You will see instructions showing you how to download the runner application and install it on your self-hosted runner machine. Open a shell on your self-hosted runner machine and run each shell command in the order shown. Note: On Windows, if you want to install the self-hosted runner application as a service, you must open a shell with administrator privileges. We also recommend that you use C:\\actions-runner as the directory for the self-hosted runner application so that Windows system accounts can access the runner directory. The instructions walk you through completing these tasks: Downloading and extracting the self-hosted runner application. Running the config script to configure the self-hosted runner application and register it with GitHub Actions. The config script requires the destination URL and an automatically-generated time-limited token to authenticate the request. Running the self-hosted runner application to connect the machine to GitHub Actions. Checking that your self-hosted runner was successfully added After completing the steps to add a self-hosted runner, the runner and its status are now listed under \"Self-hosted runners\". The self-hosted runner application must be active for the runner to accept jobs. When the runner application is connected to GitHub Enterprise Server and ready to receive jobs, you will see the following message on machine's terminal. \u221a Connected to GitHub 2019-10-24 05:45:56Z: Listening for Jobs","title":"Home"},{"location":"#adding-self-hosted-runners","text":"You can add a self-hosted runner to a repository, an organization, or an enterprise.","title":"Adding self-hosted runners"},{"location":"#adding-a-self-hosted-runner-to-a-repository","text":"You can add self-hosted runners to a single repository. To add a self-hosted runner to a user repository, you must be the repository owner. For an organization repository, you must be an organization owner or have admin access to the repository. On GitHub Enterprise Server, navigate to the main page of the repository. Under your repository name, click Settings. In the left sidebar, click Actions. Under \"Self-hosted runners,\" click Add runner . Select the operating system and architecture of your self-hosted runner machine. You will see instructions showing you how to download the runner application and install it on your self-hosted runner machine. Open a shell on your self-hosted runner machine and run each shell command in the order shown. Note: On Windows, if you want to install the self-hosted runner application as a service, you must open a shell with administrator privileges. We also recommend that you use C:\\actions-runner as the directory for the self-hosted runner application so that Windows system accounts can access the runner directory. The instructions walk you through completing these tasks: Downloading and extracting the self-hosted runner application. Running the config script to configure the self-hosted runner application and register it with GitHub Actions. The config script requires the destination URL and an automatically-generated time-limited token to authenticate the request. Running the self-hosted runner application to connect the machine to GitHub Actions.","title":"Adding a self-hosted runner to a repository"},{"location":"#checking-that-your-self-hosted-runner-was-successfully-added","text":"After completing the steps to add a self-hosted runner, the runner and its status are now listed under \"Self-hosted runners\". The self-hosted runner application must be active for the runner to accept jobs. When the runner application is connected to GitHub Enterprise Server and ready to receive jobs, you will see the following message on machine's terminal. \u221a Connected to GitHub 2019-10-24 05:45:56Z: Listening for Jobs","title":"Checking that your self-hosted runner was successfully added"},{"location":"self-hosted/","text":"Add self-hosted runner Adding a self-hosted runner requires that you download, configure, and execute the GitHub Actions Runner. By downloading and configuring the Github Actions Runner, you agree to the GitHub Terms of Service or GitHub Corporate Terms of Service, as applicable. Download We recommend configuring the runner under C:\\actions-runner . This will help avoid issues related to service identity folder permissions and long path restrictions on Windows. NOTE: Run commands below as Administrator. # Create a folder under the drive root $ mkdir actions-runner; cd actions-runner # Download the latest runner package $ Invoke-WebRequest -Uri https://github.com/actions/runner/releases/download/v2.278.0/actions-runner-win-x64-2.278.0.zip -OutFile actions-runner-win-x64-2.278.0.zip # Extract the installer $ Add-Type -AssemblyName System.IO.Compression.FileSystem ; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"$PWD/actions-runner-win-x64-2.278.0.zip\", \"$PWD\") Configure # Create the runner and start the configuration experience $ ./config.cmd --url https://github.com/n0lr4m/mkdocs-self-hosted-runners --token APFMFHICIFA7IF7LSL53FITARYNM4 # Run it! $ ./run.cmd Windows Service Open Services using shortcut Windows + R then on run dialog type services.msc locate GitHub Actions Runner open proprierties tem go to Logon tab and select Local System account click OK and restart de service. Using your self-hosted runner # Use this YAML in your workflow file for each job runs-on: self-hosted","title":"Self-Hosted"},{"location":"self-hosted/#add-self-hosted-runner","text":"Adding a self-hosted runner requires that you download, configure, and execute the GitHub Actions Runner. By downloading and configuring the Github Actions Runner, you agree to the GitHub Terms of Service or GitHub Corporate Terms of Service, as applicable.","title":"Add self-hosted runner"},{"location":"self-hosted/#download","text":"We recommend configuring the runner under C:\\actions-runner . This will help avoid issues related to service identity folder permissions and long path restrictions on Windows. NOTE: Run commands below as Administrator. # Create a folder under the drive root $ mkdir actions-runner; cd actions-runner # Download the latest runner package $ Invoke-WebRequest -Uri https://github.com/actions/runner/releases/download/v2.278.0/actions-runner-win-x64-2.278.0.zip -OutFile actions-runner-win-x64-2.278.0.zip # Extract the installer $ Add-Type -AssemblyName System.IO.Compression.FileSystem ; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"$PWD/actions-runner-win-x64-2.278.0.zip\", \"$PWD\")","title":"Download"},{"location":"self-hosted/#configure","text":"# Create the runner and start the configuration experience $ ./config.cmd --url https://github.com/n0lr4m/mkdocs-self-hosted-runners --token APFMFHICIFA7IF7LSL53FITARYNM4 # Run it! $ ./run.cmd","title":"Configure"},{"location":"self-hosted/#windows-service","text":"Open Services using shortcut Windows + R then on run dialog type services.msc locate GitHub Actions Runner open proprierties tem go to Logon tab and select Local System account click OK and restart de service.","title":"Windows Service"},{"location":"self-hosted/#using-your-self-hosted-runner","text":"# Use this YAML in your workflow file for each job runs-on: self-hosted","title":"Using your self-hosted runner"}]}